documentation:
    everybody loves documentation!
bug tracker:
skdb core:
    units:
        peak and continuous ratings: what are default time constants?
        yaml path resolver: for max/min/peak/continuous/power/torque/height/width etc
        yaml regex resolver: how to do this without matching over entire units .dat?
    statistics:
        arbitrary distributions: processes often follow odd laws (non-gaussian)
        evaluate typical feasible: but dont dump some messy construct
        think about how to utilize statistical data: in search/optimization algorithms
    geom:
        wrap TopoDS_Shape in Shape class:
            make assembly graph yaml dump work:
        get rid of STEP loading spam:
            and other OCC spam:
        real wrapper code: 
            instead of subclassing from OCC:
                openGL example:
            use tags/names for geometries:
        connection graph:
            apply transforms at each arc while traversing: is this done?
            wrap some graph class instead of using directly for easy swapping:
            turn skdb/doc/proposals/assemblies.txt into unit tests:
        part mating:
            collision detection:
                fix BoundingBox:
                    rewrite it: ask fenn why
                    extract minima and maxima from surfaces: kinda important
                explore OpenCASCADE collision detection methods:
                    Constructive Solid Geometry: any volume leftover?
                    OCC bounding box classes:
                        - http://adl.serveftp.org/lab/opencascade/doc/ReferenceDocumentation/ModelingAlgorithms/html/classBRepBndLib.html
                        - http://www.opencascade.org/org/forum/thread_13902/
                interference fit:
                    list of compliant/rigid faces: is this right? shouldnt we be doing FEA instead?
                play:
                    circular peg in a square hole:
                    zero: perfect fit
                    positive: a little bit of slop
                    negative: interference fit
                    signed distance function:
        cam algorithm selection: some parts are more 2.5d than others...
    generating instructions:
        assembly planner: #aka assembly sequence planner, assembly operation planner, etc.
            motion path planner:
                collision detection: #for collision-free insertion
                    investigate third party libraries for collision detection:
                    search literature for other methods:
            write an open source assembly planner:
        figure out something better than the techniques.py proposal:
        lego assembly instructions demo:
            "make space base":
            step by step images:
inventory:
    container tags: ['!ziploc', '!fishtub', etc]
    location schema: any ideas? no dGPS or RFID please. '!shelf'?
package code:
    generate instructions for making a package: lego explohzionn
    technology readiness level:
    metadata resolution description: [stub, incomplete, usable, finished, obsessive]
clients: #desktop, unless you really like writing javascript?
    pyjamas: ?
    skdb-get:
        description: "it's like apt-get/dpkg except for hardware and real stuff"
        see: skdb/clients/tb-get/
        note: write unit tests first to verify dependencies are satisfied
    visualization:
        dependency tree browser:
        CAD file visualization:
        screenshot gallery generator from CAD files: #is this not the same thing as above?
            partially working: imgcad.py (ask kanzure)
            better version:
servers:
    djangit:
        remove all mysql dependencies:
        debugging:
        views:
            generic yaml tree: 
                js code folding: pyjamas
                highlighting: geshi?
                links to skdb tags:
            package metadata:
                links to dependencies:
                backlinks to functionality:
                    taxonomy browser:
            3d: 
                ldraw:
                step:
                iges:
                stl:
                dxf: ew
            pcb formats:
                gerber:
                eagle:
                kicad:
                pdf: (?)
            gcode:
        protocol annotation module:
            protocola: #50% bog water, 50% chocolate syrup. yummy!
        instruction output: #assembly, etc.
        b2b: Tie-in of "open source hardware directories" with "one-click ordering" and sourcing of materials from suppliers
        funding models:
            rspp: as in ' http://www.logarithmic.net/pfh/rspp '
            oshwbank:
            paypal button: this ought to be easy
            bounty:
import:
    pov-to-X conversion:
    parser for peeron and lugnet:
    parse matweb scrape: (samrose)
    ldraw to step: implicit geometry recognition?
    stl to step "primitive recognition":
        feasibility: low
    fix slow loading of STL files in OpenCASCADE:
    ldr to pyldraw: needs testing (ask kanzure)
        ldr to solid:
            investigate ldr primitives:
            LGEO: maybe? (~700 parts)
                pov2rib: figure out antlr, play with dot g files
                    generate povray parser:
                        figure out antlr: convert from BNF->g grammar? (kanzure)
                        figure out pyparsing:
        convert ldr lego theo jansen mechanism:
    pybox2d to skdb:
        convert theo jansen mechanism:
export: #external simulations
    pyODE:
    pybox2d:
    cam algorithms:
        pycam: 
        kurve: 
        libactp:
        celeron55 gerber: maybe
stuff to package:
    screw: 
        catalog generator script:
        cad generator:
            how to deal with generated data:
            not blow up without OCC:
        internal graph model of a spring:
            two bearings:
            spring:
            equation:
    thread:
        common metric sizes:
        common SAE sizes:
        cad generator: 
    lego:
        finish technic grammar:
        parse .lst and catalog files:
        bricklink cost evaluator: scraper
        cad generator:
        interface generator:
        do inventory:
        fix existing cad models: scale is wrong. re-measure?
    trans-tech: at least at low resolution
    construction materials: #these are categories, not individual materials. low-tech and inexpensive to start with
        metal:
        plastic:
        wood:
        foam:
        paper:
        glass:
        rubber:
        ceramic:
        composite:
            concrete:
        food: cheese robots, attack!
        phase change materials: does cheese count? maybe tags instead of categories
    bearing:
    plastic gel box case:
        get cad files from tito:
            author: Tito Jankowski
            links:
            - "http://www.pearlbiotech.com/wp-content/uploads/2009/05/pearl_biotech-gel_box_cad.skp"
        find and verify generator script:
            author: Michael Katsevman
            links:
            - "http://groups.google.com/group/diybio/msg/fb0cb0b7d6bf9b35"
            - "http://logarchy.org/electrophoresis.py"
    test tube holder: #why?
        standard eppendorf tube rack: much more useful
        96 well plate: 
    transilluminator: #gel imager
    mechmate:
    arduino:
    technical devices: i guess? at least its a source of ideas for components
    mcmaster catalog: same deal
