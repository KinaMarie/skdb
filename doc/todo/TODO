todo list for skdb-related work


skdb core:
    units:
        peak and continuous ratings: what are default time constants?
        yaml path resolver: for max/min/peak/continuous/power/torque/height/width etc
        yaml regex resolver: how to do this without matching over entire units .dat?
    statistics:
        arbitrary distributions: processes often follow odd laws (non-gaussian)
        evaluate typical feasible: but dont dump some messy construct
    geom:
        connection graph:
            apply transforms at each arc while traversing:
            wrap some graph class instead of using directly for easy swapping:
        part mating:
            collision detection: and percentage interference allowed
package code:
    generate instructions for making a package:
clients: #desktop, unless you really like writing javascript?
    skdb-get:
        description: "it's like apt-get/dpkg except for hardware and real stuff"
        see: skdb/clients/tb-get/
        note: write unit tests first to verify dependencies are satisfied
    visualization:
        dependency tree browser:
        CAD file visualization:
        screenshot gallery generator from CAD files:
            partially working: imgcad.py (ask kanzure)
            better version:
servers:
    djangit:
        remove all mysql dependencies:
        debugging:
        views:
            generic yaml tree: 
                js code folding: 
                highlighting: 
                links to skdb tags:
            package metadata:
                links to dependencies:
                backlinks to functionality:
                    taxonomy browser:
            3d: 
                ldraw:
                step:
                iges:
                stl:
                dxf:
            pcb formats:
                gerber:
                eagle:
                kicad:
                pdf: (?)
            gcode:
        protocol annotation module:
            protocola: #50% bog water, 50% chocolate syrup. yummy!
        instruction output: #assembly, etc.
        b2b: Tie-in of "open source hardware directories" with "one-click ordering" and sourcing of materials from suppliers
        funding models:
            rspp: as in ' http://www.logarithmic.net/pfh/rspp '
            oshwbank:
            paypal button: this ought to be easy
            bounty:
import:
    pov-to-X conversion:
    parser for peeron and lugnet:
    parse matweb scrape: (samrose)
    ldraw to step: implicit geometry recognition?
    stl to step:
        feasibility: low
    ldr to pyldraw: needs testing (ask kanzure)
        convert ldr lego theo jansen mechanism:
    pybox2d to skdb:
        convert theo jansen mechanism:
export: #external simulations
    pyODE:
    pybox2d:
stuff to package:
    screw: 
        catalog generator script:
        cad generator:
    thread:
        common metric sizes:
        common SAE sizes:
        cad generator:
    lego:
        finish technic grammar:
        parse .lst and catalog files:
        bricklink cost evaluator: scraper
        cad generator:
    bearing:
    plastic gel box case:
        get cad files from tito:
            author: Tito Jankowski
            links:
            - "http://www.pearlbiotech.com/wp-content/uploads/2009/05/pearl_biotech-gel_box_cad.skp"
        find and verify generator script:
            author: Michael Katsevman
            links:
            - "http://groups.google.com/group/diybio/msg/fb0cb0b7d6bf9b35"
            - "http://logarchy.org/electrophoresis.py"
    test tube holder: why?
    transilluminator: #gel imager
    mechmate:
    arduino:
    technical devices: i guess? at least its a source of ideas for components
    mcmaster catalog: same deal
