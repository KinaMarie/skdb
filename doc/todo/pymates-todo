
2009-07-27:
    * use tags/names for geometories in pymates/models/blockhole.yaml
    * unit tests for part mating
        * turn skdb/doc/proposals/assemblies.txt into unit tests
    * more example parts: legos?
        * attempt to extract data from LeoCAD and ldraw
        * attempt to extract data from Regli's National Design Repository (lego VRML files)
        * come up with a lego brick generator?
        * integrate skdb/doc/proposals/legos.py with pymates/pymates.py
    * shaft in a lego brick:
        * slop (a distance)
           * the minimum distance between those two surfaces
           * whereas intersection is the maximum distance between those two interfaces
        * play
        * sine distance function
            * circular peg in a square hole
            * zero: perfect fit
            * positive: a little bit of slop
            * negative: interference fit
            * distances between two surfaces in OpenCASCADE
                * in which case you need faces
         * Constructive Solid Geometry
            * any volume leftover?
         * put the block into a bigger block and get the "mold"
            * amount of space remaining
            * do the subtraction again and get the space remaining - to get the slop
         * distances between faces v. solid geometry approach
    * read STEP ISO 10303
        * figure out how to add a feature to the file (instead of using pymates/models/blockhole.yaml)
        # well that was a dead end. Solidworks, AutoCAD, and even PRO/E can't seem to do annotations with STEP ISO 10303 AP214.

2009-07-30:
    * unit tests for part mating
        * turn skdb/doc/proposals/assemblies.txt into unit tests
        * legos.py unit tests
    * merges
        * merge skdb/doc/proposals/assemblies.txt + skdb/doc/proposals/legos.py
        * merge skdb/doc/proposals/legos.py + skdb/pymates/pymates.py
    * play with legos:
        * see the lego IGES/STEP files
        * are the VRML parts of any use?
            * if so, see ldr2vrml
                * generate ldr files for all parts from LDraw
                * run ldr2vrml on all of these ldr files
        * pyldraw: interactive visualization of legos in python interpreter session + OpenCASCADE
            * alternatively: OpenGL rendering of the STL files (ldr2stl.py)
        * pov2rib: figure out antlr, play with dot g files
